/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6/userguide/java_library_plugin.html
 */
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'

group = "io.github.9ins"
archivesBaseName = "console-input-manager"
version = "1.0.1"
sourceCompatibility = 1.8
compileJava.options.encoding = 'utf-8'

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'console-input-manager'
        packaging 'jar'
        description 'This library help you to build Java console input process on your console application with easiest way of way. Also it is provide more effective and easy way of development console application. You can define interactive queries which be need on the application as user input and set up each queries with full-managed way.'
        url 'https://github.com/9ins/console-input-manager'
        scm {
          connection 'scm:svn:https://github.com/9ins/console-input-manager.git'
          developerConnection 'scm:svn:https://github.com/9ins/console-input-manager.git'
          url 'https://github.com/9ins/console-input-manager.git'
        }

        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            id 'chaos930'
            name 'Kooin-Shin '
            email 'chaos930@gmail.com'
          }
        }
      }
    }
  }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'chaosgraph',
                   'Implementation-Version': version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'utf-8'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //implementation 'com.google.guava:guava:29.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12' 

    // https://mvnrepository.com/artifact/org.yaml/snakeyaml
    implementation group: 'org.yaml', name: 'snakeyaml', version: '1.26'
}
